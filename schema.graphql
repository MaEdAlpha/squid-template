
union BaseParts = FixedParts | EquippableParts
union ResourceType = NFTParentResources | NFTChildResource


type Remarks @entity {
  "Account address"
  id: ID!
  remarks: String
}

type Collections @entity{
    changes: [String]
    block: Int!
    max: Int!
    issuer: String!
    symbol: String!
    id: ID!
    metadata: String!
}

type Base @entity{
    id: ID!
    block: Int! 
    symbol: String!
    type: String
    issuer: String!
    parts: [BaseParts]!
}

type FixedParts {
    type: String
    id: ID!
    src: String
    z: Int!
}

type EquippableParts{
    equippable: [String]
    type: String
    id: ID!
    z: Int!
}

type NFTChildren {
    id: ID!
    pending: Boolean
    equipped: String
}

type NFTResource @entity{
  id:ID!
  resources: [ResourceType]!
  priority: [String]!
  rootowner:String!
}

type NFTParentResources{
  pending: Boolean
  id: ID!
  base: String!
  parts: [String]!
  thumb: String!
}

type NFTChildResource{
  pending: Boolean
  id: ID!
  slot: String!
  src: String
  thumb: String!
}

type NFTS @entity{
  id: ID!
  collection: String!
  sn: String!
  block: Int!
  owner: String!
  rootowner: String!
  changes: [ChangeLog]
  priority: [String]
  children: [NFTChildren]
  pending: Boolean!
  metadata: String!
  transferable: Int!
  forsale: String!
  burned: String!
  symbol: String!
}


type Properties @entity{
  id: ID!
  royaltyInfo: String! 
  attributes: String
  rarity: String
  race: String
  rootowner: String
}


type RoyaltyValue {
  type: String
  value: RoyaltyInfoValue! 
}

type RoyaltyInfoValue {
  royaltyPercentFloat: String! 
  reciever: String!
}

type ChangeLog{
  old: String
  new: String
}